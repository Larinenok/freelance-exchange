version: '3.3'

services:
  django_freelance_exchange:
    container_name: django_freelance_exchange
    build:
      context: .
      dockerfile: config/django/Dockerfile
    restart: on-failure
    # networks:
    #   - demo
    expose:
      - 8001
    env_file:
      - freelance_exchange/.env
    volumes:
      - ./freelance_exchange:/app/freelance_exchange:z
    depends_on:
      - db_freelance_exchange
    links:
      - db_freelance_exchange

  nginxfreelanceexchange:
    container_name: nginxfreelanceexchange
    build:
      context: .
      dockerfile: config/nginx/Dockerfile
    restart: on-failure
    # networks:
    #   - demo
    ports:
      - 8000:80
    volumes:
      - ./freelance_exchange:/app/freelance_exchange:z
    links:
      - django_freelance_exchange

  db_freelance_exchange:
    container_name: db_freelance_exchange
    image: postgres:15
    # networks:
    #   - demo
    expose:
      - 5432
    env_file:
      - freelance_exchange/.env
    volumes:
      - ./db:/var/lib/postgresql:z

  redis_container:
    image: redis:latest
    container_name: redis_container
    env_file:
      - freelance_exchange/.env
    expose:
      - 6379
    volumes:
      - ./redisdata:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  # adminer:
  #   container_name: adminer
  #   image: adminer:4.8.1-standalone
  #   restart: on-failure
  #   # networks:
  #   #   - demo
  #   ports:
  #     - '8081:8080'
  #   links:
  #     - 'db_freelance_exchange'

# networks:
#   demo:
#     driver: bridge
#     external: true
