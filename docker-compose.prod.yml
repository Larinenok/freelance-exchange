version: '3.8'

services:
  django_freelance_exchange:
    container_name: django_freelance_exchange
    build:
      context: .
      dockerfile: config/django/Dockerfile
    restart: on-failure
    networks:
      - demo
    expose:
      - 8001
    volumes:
      - ./freelance_exchange:/app/freelance_exchange:z
    depends_on:
      - db_freelance_exchange
    links:
      - db_freelance_exchange

  nginxfreelanceexchange:
    container_name: nginxfreelanceexchange
    build: 
      context: .
      dockerfile: config/nginx/Dockerfile
    restart: on-failure
    networks:
      - demo
    expose:
      - 80
    volumes:
      - ./freelance_exchange:/app/freelance_exchange:z
    links:
      - django_freelance_exchange

  db_freelance_exchange:
    container_name: db_freelance_exchange
    image: postgres:15
    networks:
      - demo
    expose:
      - 5432
    env_file:
      - freelance_exchange/.env
    volumes:
      - ./db:/var/lib/postgresql:z

  redis:
    image: redis:latest
    container_name: redis_container
    env_file:
      - freelance_exchange/.env
    expose:
      - 6379
    volumes:
      - ./redisdata:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
        echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
        echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
        echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
      '
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

networks:
  demo:
    # driver: bridge
    external: true
